https://compscicenter.ru/courses/hp-course/2020-spring/classes/5498

	Lecture 2 (primitives of synchronize)

In LP don't exist connection between primitives and data's
Linux ~ 16 millions code line's
~500 syscalls in Linux (POSIX standart)
Asm instructions ~ ns (because gigahertz in CPU ~ ns)
Call syscall dt ~= 1ms

	RAM
---------------------------------------------------------
| th_0	| th_1	|  ... 	| th_n	| kernel		|
|	|	|	| th_n	| (already in mem)	|
-------------------------------------^-------------------
	   | syscall		     |
	   ---------------------------
every syscall = swith context (bad performance)

mtx.lock() -> (wait if already exist thread in critical section)
	// citical section ...
mtc.unlock()

	Types of synchronise primitives
1) recursive
2) don't recursive

	Spurious wake up
specially added in Linux kernel, already add inf cicle for
condition wariables

	Named mutex - mutex with some name for synchronise in others
PROCESS (not threads)
// implemented in kernel only
// correct unlock in case crash of application
